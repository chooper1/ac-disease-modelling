cases=cases[!is.na(cases)]
start=min(which(cases>0, arr.ind=TRUE))
cases=c(cases[start:length(cases)])
par=c(r=2, p=1, alpha=1, K=5000)
fit=optim(par=par, fn=ssq2, cases=cases, control=list(parscale=c(1,1,1,10000)))
parest=fit$par
return(parest)
}
fit_multiple=function(tdata){
no_cases=c()
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
if(sum(cases)==0){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
regions=regions(tdata)
paramdf=data.frame(fit_param(1))
colnames(paramdf)=c(regions[1])
for(x in seq(2, ncol(tdata))){
print(x)
p=data.frame(fit_param(x))
colnames(p)=c(regions[x])
paramdf=cbind(paramdf, p)
print(p)
}
return(paramdf)
}
fitted_params=fit_multiple(tdata)
ncol(tdata)
no_cases=c()
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
if(sum(cases)==0){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
ncol(tdata)
tdata[5:nrow(tdata), 210]
tdata[5:nrow(tdata), 209]
tdata[5:nrow(tdata), 211]
source("C:/Users/mjiho/ac-disease-modelling/R-model/Margaret/parameter_fitting.R")
setwd("C:/Users/mjiho/Desktop/COVID-19_modelling/")
data <- read.csv("time_series_19-covid-Confirmed_archived_0325.csv")
tdata<-t(data)
regions=function(tdata){
regions=c()
for(x in seq(1, ncol(tdata))){
regions=append(regions, paste(tdata[1, x], tdata[2, x]))
}
return(regions)
}
#starting guess for parameters
fit_param=function(region){
cases=as.integer(tdata[5:nrow(tdata), region])
cases=cases[!is.na(cases)]
start=min(which(cases>0, arr.ind=TRUE))
cases=c(cases[start:length(cases)])
par=c(r=2, p=1, alpha=1, K=5000)
fit=optim(par=par, fn=ssq2, cases=cases, control=list(parscale=c(1,1,1,10000)))
parest=fit$par
return(parest)
}
fit_multiple=function(tdata){
no_cases=c()
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
if(sum(cases)==0){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
regions=regions(tdata)
paramdf=data.frame(fit_param(1))
colnames(paramdf)=c(regions[1])
#change start back to 2!
for(x in seq(100, ncol(tdata))){
print(x)
p=data.frame(fit_param(x))
colnames(p)=c(regions[x])
paramdf=cbind(paramdf, p)
print(p)
}
return(paramdf)
}
fit_multiple(tdata)
source("C:/Users/mjiho/ac-disease-modelling/R-model/Margaret/parameter_fitting.R")
setwd("C:/Users/mjiho/Desktop/COVID-19_modelling/")
data <- read.csv("time_series_19-covid-Confirmed_archived_0325.csv")
tdata<-t(data)
regions=function(tdata){
regions=c()
for(x in seq(1, ncol(tdata))){
regions=append(regions, paste(tdata[1, x], tdata[2, x]))
}
return(regions)
}
#starting guess for parameters
fit_param=function(region){
cases=as.integer(tdata[5:nrow(tdata), region])
cases=cases[!is.na(cases)]
start=min(which(cases>0, arr.ind=TRUE))
cases=c(cases[start:length(cases)])
par=c(r=2, p=1, alpha=1, K=5000)
fit=optim(par=par, fn=ssq2, cases=cases, control=list(parscale=c(1,1,1,10000)))
parest=fit$par
return(parest)
}
fit_multiple=function(tdata){
no_cases=c()
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
if(sum(cases)<2){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
regions=regions(tdata)
paramdf=data.frame(fit_param(1))
colnames(paramdf)=c(regions[1])
for(x in seq(2, ncol(tdata))){
print(x)
p=data.frame(fit_param(x))
colnames(p)=c(regions[x])
paramdf=cbind(paramdf, p)
print(p)
}
return(paramdf)
}
fit_multiple(tdata)
source("C:/Users/mjiho/ac-disease-modelling/R-model/Margaret/parameter_fitting.R")
setwd("C:/Users/mjiho/Desktop/COVID-19_modelling/")
data <- read.csv("time_series_19-covid-Confirmed_archived_0325.csv")
tdata<-t(data)
regions=function(tdata){
regions=c()
for(x in seq(1, ncol(tdata))){
regions=append(regions, paste(tdata[1, x], tdata[2, x]))
}
return(regions)
}
#starting guess for parameters
fit_param=function(region){
cases=as.integer(tdata[5:nrow(tdata), region])
cases=cases[!is.na(cases)]
start=min(which(cases>0, arr.ind=TRUE))
cases=c(cases[start:length(cases)])
par=c(r=2, p=1, alpha=1, K=5000)
fit=optim(par=par, fn=ssq2, cases=cases, control=list(parscale=c(1,1,1,10000)))
parest=fit$par
return(parest)
}
fit_multiple=function(tdata){
no_cases=c()
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
if(sum(cases)<2){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
regions=regions(tdata)
paramdf=data.frame(fit_param(1))
colnames(paramdf)=c(regions[1])
#start should be 2
for(x in seq(200, ncol(tdata))){
print(x)
p=data.frame(fit_param(x))
colnames(p)=c(regions[x])
paramdf=cbind(paramdf, p)
print(p)
}
return(paramdf)
}
fit_multiple(tdata)
ncol(tdata)
source("C:/Users/mjiho/ac-disease-modelling/R-model/Margaret/parameter_fitting.R")
setwd("C:/Users/mjiho/Desktop/COVID-19_modelling/")
data <- read.csv("time_series_19-covid-Confirmed_archived_0325.csv")
tdata<-t(data)
regions=function(tdata){
regions=c()
for(x in seq(1, ncol(tdata))){
regions=append(regions, paste(tdata[1, x], tdata[2, x]))
}
return(regions)
}
#starting guess for parameters
fit_param=function(region){
cases=as.integer(tdata[5:nrow(tdata), region])
cases=cases[!is.na(cases)]
start=min(which(cases>0, arr.ind=TRUE))
cases=c(cases[start:length(cases)])
par=c(r=2, p=1, alpha=1, K=5000)
fit=optim(par=par, fn=ssq2, cases=cases, control=list(parscale=c(1,1,1,10000)))
parest=fit$par
return(parest)
}
fit_multiple=function(tdata){
no_cases=c()
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
if(sum(cases)<2){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
print(ncol(tdata))
regions=regions(tdata)
paramdf=data.frame(fit_param(1))
colnames(paramdf)=c(regions[1])
#start should be 2
for(x in seq(200, ncol(tdata))){
print(x)
p=data.frame(fit_param(x))
colnames(p)=c(regions[x])
paramdf=cbind(paramdf, p)
# print(p)
}
return(paramdf)
}
fit_multiple(tdata)
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
if(sum(cases)<2){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
ncol(tdata)
tdata[5:nrow(tdata), 210]
source("C:/Users/mjiho/ac-disease-modelling/R-model/Margaret/parameter_fitting.R")
setwd("C:/Users/mjiho/Desktop/COVID-19_modelling/")
data <- read.csv("time_series_19-covid-Confirmed_archived_0325.csv")
tdata<-t(data)
regions=function(tdata){
regions=c()
for(x in seq(1, ncol(tdata))){
regions=append(regions, paste(tdata[1, x], tdata[2, x]))
}
return(regions)
}
#starting guess for parameters
fit_param=function(region){
cases=as.integer(tdata[5:nrow(tdata), region])
cases=cases[!is.na(cases)]
start=min(which(cases>0, arr.ind=TRUE))
cases=c(cases[start:length(cases)])
par=c(r=2, p=1, alpha=1, K=5000)
fit=optim(par=par, fn=ssq2, cases=cases, control=list(parscale=c(1,1,1,10000)))
parest=fit$par
return(parest)
}
fit_multiple=function(tdata){
no_cases=c()
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
if(sum(cases)<5){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
regions=regions(tdata)
paramdf=data.frame(fit_param(1))
colnames(paramdf)=c(regions[1])
#start should be 2
for(x in seq(200, ncol(tdata))){
print(x)
p=data.frame(fit_param(x))
colnames(p)=c(regions[x])
paramdf=cbind(paramdf, p)
print(p)
}
return(paramdf)
}
fit_multiple(tdata)
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
if(sum(cases)<5){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
tdata[5:nrow(tdata), 210]
n_obs=colSums(cases != 0)
cases
n_obs=sum(cases != 0)
n_0bs
n_obs
cases=c(1, 2, 0)
n_obs=sum(cases != 0)
n_obs
source("C:/Users/mjiho/ac-disease-modelling/R-model/Margaret/parameter_fitting.R")
setwd("C:/Users/mjiho/Desktop/COVID-19_modelling/")
data <- read.csv("time_series_19-covid-Confirmed_archived_0325.csv")
tdata<-t(data)
regions=function(tdata){
regions=c()
for(x in seq(1, ncol(tdata))){
regions=append(regions, paste(tdata[1, x], tdata[2, x]))
}
return(regions)
}
#starting guess for parameters
fit_param=function(region){
cases=as.integer(tdata[5:nrow(tdata), region])
cases=cases[!is.na(cases)]
start=min(which(cases>0, arr.ind=TRUE))
cases=c(cases[start:length(cases)])
par=c(r=2, p=1, alpha=1, K=5000)
fit=optim(par=par, fn=ssq2, cases=cases, control=list(parscale=c(1,1,1,10000)))
parest=fit$par
return(parest)
}
fit_multiple=function(tdata){
no_cases=c()
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
n_obs=sum(cases != 0)
if(n_obs<5){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
regions=regions(tdata)
paramdf=data.frame(fit_param(1))
colnames(paramdf)=c(regions[1])
#start should be 2
for(x in seq(200, ncol(tdata))){
print(x)
p=data.frame(fit_param(x))
colnames(p)=c(regions[x])
paramdf=cbind(paramdf, p)
print(p)
}
return(paramdf)
}
fit_multiple(tdata)
no_cases=c()
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
n_obs=sum(cases != 0)
if(n_obs<5){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
ncol(tdata)
tdata[5:nrow(tdata), 210]
source("C:/Users/mjiho/ac-disease-modelling/R-model/Margaret/parameter_fitting.R")
setwd("C:/Users/mjiho/Desktop/COVID-19_modelling/")
data <- read.csv("time_series_19-covid-Confirmed_archived_0325.csv")
tdata<-t(data)
regions=function(tdata){
regions=c()
for(x in seq(1, ncol(tdata))){
regions=append(regions, paste(tdata[1, x], tdata[2, x]))
}
return(regions)
}
#starting guess for parameters
fit_param=function(region){
cases=as.integer(tdata[5:nrow(tdata), region])
cases=cases[!is.na(cases)]
start=min(which(cases>0, arr.ind=TRUE))
cases=c(cases[start:length(cases)])
par=c(r=2, p=1, alpha=1, K=max(cases))
fit=optim(par=par, fn=ssq2, cases=cases, control=list(parscale=c(1,1,1,10000)))
parest=fit$par
return(parest)
}
fit_multiple=function(tdata){
no_cases=c()
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
n_obs=sum(cases != 0)
if(n_obs<5){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
regions=regions(tdata)
paramdf=data.frame(fit_param(1))
colnames(paramdf)=c(regions[1])
#start should be 2
for(x in seq(200, ncol(tdata))){
print(x)
p=data.frame(fit_param(x))
colnames(p)=c(regions[x])
paramdf=cbind(paramdf, p)
print(p)
}
return(paramdf)
}
fit_multiple(tdata)
source("C:/Users/mjiho/ac-disease-modelling/R-model/Margaret/parameter_fitting.R")
setwd("C:/Users/mjiho/Desktop/COVID-19_modelling/")
data <- read.csv("time_series_19-covid-Confirmed_archived_0325.csv")
tdata<-t(data)
regions=function(tdata){
regions=c()
for(x in seq(1, ncol(tdata))){
regions=append(regions, paste(tdata[1, x], tdata[2, x]))
}
return(regions)
}
#starting guess for parameters
fit_param=function(region){
cases=as.integer(tdata[5:nrow(tdata), region])
cases=cases[!is.na(cases)]
start=min(which(cases>0, arr.ind=TRUE))
cases=c(cases[start:length(cases)])
par=c(r=2, p=1, alpha=1, K=5000)
fit=optim(par=par, fn=ssq2, cases=cases, control=list(parscale=c(1,1,1,10000)))
parest=fit$par
return(parest)
}
fit_multiple=function(tdata){
no_cases=c()
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
if(sum(cases)==0){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
regions=regions(tdata)
paramdf=data.frame(fit_param(1))
colnames(paramdf)=c(regions[1])
#start should be 2
for(x in seq(200, ncol(tdata))){
print(x)
p=data.frame(fit_param(x))
colnames(p)=c(regions[x])
paramdf=cbind(paramdf, p)
print(p)
}
return(paramdf)
}
fit_multiple(tdata)
setwd("C:/Users/mjiho/ac-disease-modelling/R-model/Margaret/")
source("parameter_fitting.R")
#read data
data <- read.csv("time_series_19-covid-Confirmed_archived_0325.csv")
tdata<-t(data)
#generates a vector of region labels for the estimates
regions=function(tdata){
regions=c()
for(x in seq(1, ncol(tdata))){
#combines label from first and second row (region and country)
regions=append(regions, paste(tdata[1, x], tdata[2, x]))
}
return(regions)
}
#fits r, p, alpha, and K for a given region
fit_param=function(region){
#format case data for a given region
cases=as.integer(tdata[5:nrow(tdata), region])
cases=cases[!is.na(cases)]
#discards data for days before initial outbreak
start=min(which(cases>0, arr.ind=TRUE))
cases=c(cases[start:length(cases)])
#starting guess for parameters
par=c(r=2, p=1, alpha=1, K=5000)
#performs the fit
fit=optim(par=par, fn=ssq2, cases=cases, control=list(parscale=c(1,1,1,10000)))
parest=fit$par
return(parest)
}
fit_multiple=function(tdata){
#removes columns for countries with no cases
no_cases=c()
for(x in seq(1, ncol(tdata))){
cases=as.integer(tdata[5:nrow(tdata), x])
cases=cases[!is.na(cases)]
if(sum(cases)==0){
no_cases=append(no_cases, x)
}
}
tdata=subset(tdata, select=-c(no_cases))
#generates labels
regions=regions(tdata)
#performs the fit for the first element in the dataframe (assumption: the dataframe has at least 2 columns)
paramdf=data.frame(fit_param(1))
colnames(paramdf)=c(regions[1])
#performs the fit for the rest of the regions, adds results to the dataframe
#start should be 2
for(x in seq(200, ncol(tdata))){
print(x)
p=data.frame(fit_param(x))
colnames(p)=c(regions[x])
paramdf=cbind(paramdf, p)
print(p)
}
return(paramdf)
}
fit_multiple(tdata)
